{"name":"testTempFromTwoSources","status":"broken","statusDetails":{"known":false,"muted":false,"flaky":false,"message":"From two sources the temperature's are not in specified range","trace":"com.testvagrant.project.customexcpetion.TempNotInRangeException: From two sources the temperature's are not in specified range\r\n\tat tests.TestVagrantTempCheckTest.testTempFromTwoSources(TestVagrantTempCheckTest.java:70)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)\r\n\tat org.testng.internal.Invoker.invokeMethod(Invoker.java:583)\r\n\tat org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)\r\n\tat org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)\r\n\tat org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)\r\n\tat org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)\r\n\tat org.testng.TestRunner.privateRun(TestRunner.java:648)\r\n\tat org.testng.TestRunner.run(TestRunner.java:505)\r\n\tat org.testng.SuiteRunner.runTest(SuiteRunner.java:455)\r\n\tat org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)\r\n\tat org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)\r\n\tat org.testng.SuiteRunner.run(SuiteRunner.java:364)\r\n\tat org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)\r\n\tat org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)\r\n\tat org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)\r\n\tat org.testng.TestNG.runSuitesLocally(TestNG.java:1137)\r\n\tat org.testng.TestNG.runSuites(TestNG.java:1049)\r\n\tat org.testng.TestNG.run(TestNG.java:1017)\r\n\tat org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)\r\n\tat org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)\r\n\tat org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)\r\n\tat org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:386)\r\n\tat org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:323)\r\n\tat org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:143)\r\n"},"stage":"finished","description":"Verify that Status code is 200 when we get GitHub RequestPayloads of User","steps":[],"attachments":[],"parameters":[],"start":1635000534167,"stop":1635000547210,"uuid":"54ff218c-d56b-4ca4-86b9-eb6631e6f9c3","historyId":"de4a0217fc36ae5b8a9e87b38e239953","fullName":"tests.TestVagrantTempCheckTest.testTempFromTwoSources","labels":[{"name":"package","value":"tests.TestVagrantTempCheckTest"},{"name":"testClass","value":"tests.TestVagrantTempCheckTest"},{"name":"testMethod","value":"testTempFromTwoSources"},{"name":"parentSuite","value":"TestingSumo GitHub Repo API Automation"},{"name":"suite","value":"Test"},{"name":"subSuite","value":"tests.TestVagrantTempCheckTest"},{"name":"host","value":"IND-LTJaiswal"},{"name":"thread","value":"31020@IND-LTJaiswal.main(1)"},{"name":"framework","value":"testng"},{"name":"language","value":"java"},{"name":"owner","value":"Promode"},{"name":"severity","value":"normal"}],"links":[]}